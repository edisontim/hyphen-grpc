// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "list_agents.proto" (package "list_agents", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
import { AgentChannel } from "./types";
import { AgentPersonality } from "./types";
/**
 * @generated from protobuf message list_agents.ListAgentsRequest
 */
export interface ListAgentsRequest {
    /**
     * @generated from protobuf field: int32 limit = 1
     */
    limit: number;
    /**
     * @generated from protobuf field: int32 offset = 2
     */
    offset: number;
}
/**
 * @generated from protobuf message list_agents.ListAgentsResponse
 */
export interface ListAgentsResponse {
    /**
     * @generated from protobuf field: repeated list_agents.ListedAgent agents = 1
     */
    agents: ListedAgent[];
}
/**
 * @generated from protobuf message list_agents.ListedAgent
 */
export interface ListedAgent {
    /**
     * @generated from protobuf field: list_agents.ListedAgentGeneralConfig general_config = 1
     */
    generalConfig?: ListedAgentGeneralConfig;
    /**
     * @generated from protobuf field: optional types.AgentPersonality personality = 2
     */
    personality?: AgentPersonality;
    /**
     * @generated from protobuf field: repeated types.AgentChannel channels = 10
     */
    channels: AgentChannel[];
}
/**
 * @generated from protobuf message list_agents.ListedAgentGeneralConfig
 */
export interface ListedAgentGeneralConfig {
    /**
     * @generated from protobuf field: string id = 1
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2
     */
    name: string;
    /**
     * @generated from protobuf field: string creator = 3
     */
    creator: string;
    /**
     * @generated from protobuf field: repeated string tools = 4
     */
    tools: string[];
    /**
     * @generated from protobuf field: optional string wallet_address = 5
     */
    walletAddress?: string;
    /**
     * @generated from protobuf field: string token_address = 6
     */
    tokenAddress: string;
    /**
     * @generated from protobuf field: string token_ticker = 7
     */
    tokenTicker: string;
    /**
     * @generated from protobuf field: bool enabled = 8
     */
    enabled: boolean;
    /**
     * @generated from protobuf field: list_agents.CreationStatus creation_status = 9
     */
    creationStatus: CreationStatus;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 10
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updated_at = 11
     */
    updatedAt?: Timestamp;
}
/**
 * @generated from protobuf enum list_agents.CreationStatus
 */
export enum CreationStatus {
    /**
     * @generated from protobuf enum value: WAITING_FOR_TOKEN_ADDRESS = 0;
     */
    WAITING_FOR_TOKEN_ADDRESS = 0,
    /**
     * @generated from protobuf enum value: WAITING_FOR_HYPURR_LAUNCH = 1;
     */
    WAITING_FOR_HYPURR_LAUNCH = 1,
    /**
     * @generated from protobuf enum value: WAITING_FOR_HPYH_PAYMENT = 2;
     */
    WAITING_FOR_HPYH_PAYMENT = 2,
    /**
     * @generated from protobuf enum value: CREATED = 3;
     */
    CREATED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class ListAgentsRequest$Type extends MessageType<ListAgentsRequest> {
    constructor() {
        super("list_agents.ListAgentsRequest", [
            { no: 1, name: "limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "offset", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ListAgentsRequest>): ListAgentsRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.limit = 0;
        message.offset = 0;
        if (value !== undefined)
            reflectionMergePartial<ListAgentsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListAgentsRequest): ListAgentsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 limit */ 1:
                    message.limit = reader.int32();
                    break;
                case /* int32 offset */ 2:
                    message.offset = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListAgentsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 limit = 1; */
        if (message.limit !== 0)
            writer.tag(1, WireType.Varint).int32(message.limit);
        /* int32 offset = 2; */
        if (message.offset !== 0)
            writer.tag(2, WireType.Varint).int32(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message list_agents.ListAgentsRequest
 */
export const ListAgentsRequest = new ListAgentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListAgentsResponse$Type extends MessageType<ListAgentsResponse> {
    constructor() {
        super("list_agents.ListAgentsResponse", [
            { no: 1, name: "agents", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ListedAgent }
        ]);
    }
    create(value?: PartialMessage<ListAgentsResponse>): ListAgentsResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.agents = [];
        if (value !== undefined)
            reflectionMergePartial<ListAgentsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListAgentsResponse): ListAgentsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated list_agents.ListedAgent agents */ 1:
                    message.agents.push(ListedAgent.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListAgentsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated list_agents.ListedAgent agents = 1; */
        for (let i = 0; i < message.agents.length; i++)
            ListedAgent.internalBinaryWrite(message.agents[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message list_agents.ListAgentsResponse
 */
export const ListAgentsResponse = new ListAgentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListedAgent$Type extends MessageType<ListedAgent> {
    constructor() {
        super("list_agents.ListedAgent", [
            { no: 1, name: "general_config", kind: "message", T: () => ListedAgentGeneralConfig },
            { no: 2, name: "personality", kind: "message", T: () => AgentPersonality },
            { no: 10, name: "channels", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AgentChannel }
        ]);
    }
    create(value?: PartialMessage<ListedAgent>): ListedAgent {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.channels = [];
        if (value !== undefined)
            reflectionMergePartial<ListedAgent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListedAgent): ListedAgent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* list_agents.ListedAgentGeneralConfig general_config */ 1:
                    message.generalConfig = ListedAgentGeneralConfig.internalBinaryRead(reader, reader.uint32(), options, message.generalConfig);
                    break;
                case /* optional types.AgentPersonality personality */ 2:
                    message.personality = AgentPersonality.internalBinaryRead(reader, reader.uint32(), options, message.personality);
                    break;
                case /* repeated types.AgentChannel channels */ 10:
                    message.channels.push(AgentChannel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListedAgent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* list_agents.ListedAgentGeneralConfig general_config = 1; */
        if (message.generalConfig)
            ListedAgentGeneralConfig.internalBinaryWrite(message.generalConfig, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional types.AgentPersonality personality = 2; */
        if (message.personality)
            AgentPersonality.internalBinaryWrite(message.personality, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated types.AgentChannel channels = 10; */
        for (let i = 0; i < message.channels.length; i++)
            AgentChannel.internalBinaryWrite(message.channels[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message list_agents.ListedAgent
 */
export const ListedAgent = new ListedAgent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListedAgentGeneralConfig$Type extends MessageType<ListedAgentGeneralConfig> {
    constructor() {
        super("list_agents.ListedAgentGeneralConfig", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "creator", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "tools", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "wallet_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "token_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "token_ticker", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "creation_status", kind: "enum", T: () => ["list_agents.CreationStatus", CreationStatus] },
            { no: 10, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 11, name: "updated_at", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<ListedAgentGeneralConfig>): ListedAgentGeneralConfig {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        message.name = "";
        message.creator = "";
        message.tools = [];
        message.tokenAddress = "";
        message.tokenTicker = "";
        message.enabled = false;
        message.creationStatus = 0;
        if (value !== undefined)
            reflectionMergePartial<ListedAgentGeneralConfig>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListedAgentGeneralConfig): ListedAgentGeneralConfig {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string creator */ 3:
                    message.creator = reader.string();
                    break;
                case /* repeated string tools */ 4:
                    message.tools.push(reader.string());
                    break;
                case /* optional string wallet_address */ 5:
                    message.walletAddress = reader.string();
                    break;
                case /* string token_address */ 6:
                    message.tokenAddress = reader.string();
                    break;
                case /* string token_ticker */ 7:
                    message.tokenTicker = reader.string();
                    break;
                case /* bool enabled */ 8:
                    message.enabled = reader.bool();
                    break;
                case /* list_agents.CreationStatus creation_status */ 9:
                    message.creationStatus = reader.int32();
                    break;
                case /* google.protobuf.Timestamp created_at */ 10:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* google.protobuf.Timestamp updated_at */ 11:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListedAgentGeneralConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string creator = 3; */
        if (message.creator !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.creator);
        /* repeated string tools = 4; */
        for (let i = 0; i < message.tools.length; i++)
            writer.tag(4, WireType.LengthDelimited).string(message.tools[i]);
        /* optional string wallet_address = 5; */
        if (message.walletAddress !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.walletAddress);
        /* string token_address = 6; */
        if (message.tokenAddress !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.tokenAddress);
        /* string token_ticker = 7; */
        if (message.tokenTicker !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.tokenTicker);
        /* bool enabled = 8; */
        if (message.enabled !== false)
            writer.tag(8, WireType.Varint).bool(message.enabled);
        /* list_agents.CreationStatus creation_status = 9; */
        if (message.creationStatus !== 0)
            writer.tag(9, WireType.Varint).int32(message.creationStatus);
        /* google.protobuf.Timestamp created_at = 10; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp updated_at = 11; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message list_agents.ListedAgentGeneralConfig
 */
export const ListedAgentGeneralConfig = new ListedAgentGeneralConfig$Type();
