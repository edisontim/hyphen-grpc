syntax = "proto3";
package hypurr;
option go_package = "gitlab.com/hypurr/hypurr-grpc/go/hypurr";

import "google/protobuf/wrappers.proto";

import "hypurr/token.proto";
import "hypurr/wallet.proto";
import "hypurr/launch.proto";
import "hypurr/pairs.proto";
import "hypurr/cabal.proto";
import "hypurr/evm.proto";
import "hypurr/hpumpv1.proto";
import "hypurr/common.proto";

message HyperliquidTokenHoldersRequest {
  int64 token_id = 1;
}

message HyperliquidTokenHoldersResponse {
  repeated HyperliquidTokenHolder holders = 1;
}

message HyperliquidDeployAuctionRequest {
}

message HyperliquidDeployAuctionResponse {
  HyperliquidDeployAuction auction = 1;
}

message HyperliquidTokensRequest {

}

message HyperliquidTokensResponse {
  repeated HyperliquidToken tokens = 1;
}

message HyperliquidTokenMessagesRequest {
  int64 token_id = 1;
}

message HyperliquidTokenMessagesResponse {
  repeated HyperliquidTokenMessage messages = 1;
}

message HyperliquidSpotPairRequest {
  int64 id = 1;
}

message HyperliquidSpotPairResponse {
  HyperliquidSpotPair pair = 1;
}

message HyperliquidSpotPairsRequest {}

message HyperliquidSpotPairsResponse {
  repeated HyperliquidSpotPair pairs = 1;
}

message HyperliquidPerpPairsRequest {}

message HyperliquidPerpPairsResponse {
  repeated HyperliquidPerpPair pairs = 1;
}

message HyperliquidWalletRequest {
  google.protobuf.StringValue ethereum_address = 1;
}

message HyperliquidWalletResponse {
  HyperliquidWallet wallet = 1;
}

message HyperliquidLaunchesRequest {
  repeated int64 launch_ids = 1;
}

message HyperliquidLaunchesResponse {
  repeated HyperliquidLaunch launches = 1;
}

message HyperliquidLaunchStreamRequest {
  google.protobuf.Int64Value launch_id = 1;
  // Default: 200
  google.protobuf.Int64Value limit = 2;
}

message HyperliquidLaunchStreamResponse {
  repeated HyperliquidLaunch launches = 1;
}

message HyperliquidWalletDeploySessionsRequest {
  google.protobuf.Int64Value telegram_id = 1;
  google.protobuf.Int64Value wallet_id = 2;
  google.protobuf.Int64Value session_id = 3;
  google.protobuf.StringValue ethereum_address = 4;
}

message HyperliquidWalletDeploySessionsResponse {
  repeated HyperliquidWalletDeploySession sessions = 1;
}

message SetHyperliquidWalletDeploySessionTargetRequest {
  google.protobuf.StringValue ethereum_address = 1;
  int64 session_id = 2;
  string name = 3;
  string target = 4;
  int32 share = 5;
}

message SetHyperliquidWalletDeploySessionTargetResponse {
  HyperliquidWalletDeploySession session = 1;
}

message DeleteHyperliquidWalletDeploySessionTargetRequest {
  google.protobuf.StringValue ethereum_address = 1;
  int64 session_id = 2;
  string name = 3;
}

message DeleteHyperliquidWalletDeploySessionTargetResponse {
  HyperliquidWalletDeploySession session = 1;
}

message HyperliquidLaunchFillsRequest {
  google.protobuf.Int64Value launch_id = 1;
  google.protobuf.Int64Value limit = 2;

}

message HyperliquidLaunchFillsResponse {
  repeated HyperliquidLaunchFill fills = 1;
  repeated HyperliquidLaunchPosition positions = 2;
}


message HyperliquidLaunchCandlesRequest {
  int64 launch_id = 1;
  string interval = 2;
}

message HyperliquidLaunchCandlesResponse {
  repeated PriceCandle candles = 1;
}

message HyperliquidLaunchRequest {
  int64 id = 1;
}

message HyperliquidLaunchResponse {
  HyperliquidLaunch launch = 1;
}

message HyperliquidLaunchMessagesRequest {
  int64 launch_id = 1;
  google.protobuf.BoolValue pinned = 2;
  google.protobuf.BoolValue dev = 3;
}

message HyperliquidLaunchMessagesResponse {
  repeated HyperliquidLaunchMessage messages = 1;
}

message HyperliquidLaunchHoldersRequest {
  int64 launch_id = 1;
}

message HyperliquidLaunchHoldersResponse {
  repeated HyperliquidLaunchHolder holders = 1;
}

message LatestHyperliquidLaunchFillsRequest {}

// HPump V1 Launch Token request/response messages
message HpumpV1LaunchRequest {
  string address = 1;
}

message HpumpV1LaunchResponse {
  HpumpV1Launch launch = 1;
}

message HpumpV1LaunchesRequest {
  int32 page_size = 1;
  string page_token = 2;
  bool graduated_only = 3;
}

message HpumpV1LaunchesResponse {
  repeated HpumpV1Launch launches = 1;
  string next_page_token = 2;
}

message HpumpV1LaunchStreamRequest {
  google.protobuf.Int64Value launch_id = 1;
  // Default: 200
  google.protobuf.Int64Value limit = 2;
  google.protobuf.BoolValue graduated = 3;
}

message HpumpV1LaunchStreamResponse {
  repeated HpumpV1Launch launches = 1;
}

// HPump V1 Swap request/response messages
message HpumpV1LaunchSwapRequest {
  string id = 1;
}

message HpumpV1LaunchSwapResponse {
  HpumpV1LaunchSwap swap = 1;
}

message HpumpV1LaunchSwapsRequest {
  int32 page_size = 1;
  string page_token = 2;
  string launch_address = 3;
  string origin_address = 4;
  string to_address = 5;
}

message HpumpV1LaunchSwapsResponse {
  repeated HpumpV1LaunchSwap swaps = 1;
  string next_page_token = 2;
}

// HPump V1 Swap streaming request/response messages
message HpumpV1LaunchSwapStreamRequest {
  string launch_address = 1;
  google.protobuf.Int32Value limit = 2;
}

message HpumpV1LaunchSwapStreamResponse {
  repeated HpumpV1LaunchSwap swaps = 1;
  repeated WalletPosition positions = 2;
}

message HpumpV1LaunchCandlesRequest {
  string pair_address = 1;
  int64 from_timestamp = 2;
  int64 to_timestamp = 3;
  string interval = 4;  // e.g. "5m", "1h", "1d"
}

message HpumpV1LaunchCandlesResponse {
  repeated PriceCandle candles = 1;
}

message HpumpV1LaunchMessagesRequest {
  string launch_address = 1;
  google.protobuf.BoolValue pinned = 2;
  google.protobuf.BoolValue dev = 3;
}

message HpumpV1LaunchMessagesResponse {
  repeated HpumpV1LaunchMessage messages = 1;
}

message HyperliquidWalletPerformanceRequest {
  google.protobuf.StringValue ethereum_address = 1;
  string account_type = 2;
}

message HyperliquidWalletPerformanceResponse {
  Performance spot = 1;
  Performance perp = 2;
  Performance launch = 3;
}


message HypurrFunCabalsRequest {

}

message HypurrFunCabalsResponse {
  repeated HypurrFunCabal cabals = 1;
}

message HypurrFunCabalPerformanceRequest {
  int64 telegram_chat_id = 1;
}

message HypurrFunCabalPerformanceResponse {
  repeated HypurrFunCabalPerformance performances = 1;
}



service Static {
  rpc HyperliquidDeployAuction (HyperliquidDeployAuctionRequest) returns (HyperliquidDeployAuctionResponse) {}

  rpc HyperliquidTokens (HyperliquidTokensRequest) returns (HyperliquidTokensResponse) {}
  rpc HyperliquidTokenHolders (HyperliquidTokenHoldersRequest) returns (HyperliquidTokenHoldersResponse) {}
  rpc HyperliquidTokenMessages (HyperliquidTokenMessagesRequest) returns (stream HyperliquidTokenMessagesResponse) {}

  rpc HyperliquidSpotPair (HyperliquidSpotPairRequest) returns (HyperliquidSpotPairResponse) {}
  rpc HyperliquidSpotPairs (HyperliquidSpotPairsRequest) returns (HyperliquidSpotPairsResponse) {}
  rpc HyperliquidPerpPairs (HyperliquidPerpPairsRequest) returns (HyperliquidPerpPairsResponse) {}

  rpc HyperliquidWallet (HyperliquidWalletRequest) returns (HyperliquidWalletResponse) {}
  rpc HyperliquidWalletDeploySessions (HyperliquidWalletDeploySessionsRequest) returns (HyperliquidWalletDeploySessionsResponse) {}
  rpc HyperliquidWalletPerformance (HyperliquidWalletPerformanceRequest) returns (HyperliquidWalletPerformanceResponse) {}

  // Launch
  rpc HyperliquidLaunch (HyperliquidLaunchRequest) returns (HyperliquidLaunchResponse) {}
  rpc HyperliquidLaunches (HyperliquidLaunchesRequest) returns (HyperliquidLaunchesResponse) {}
  rpc HyperliquidLaunchStream (HyperliquidLaunchStreamRequest) returns (stream HyperliquidLaunchStreamResponse) {}
  rpc HyperliquidLaunchFills (HyperliquidLaunchFillsRequest) returns (stream HyperliquidLaunchFillsResponse) {}
  rpc HyperliquidLaunchCandles (HyperliquidLaunchCandlesRequest) returns (HyperliquidLaunchCandlesResponse) {}
  rpc HyperliquidLaunchCandleStream (HyperliquidLaunchCandlesRequest) returns (stream HyperliquidLaunchCandlesResponse) {}
  rpc HyperliquidLaunchMessages (HyperliquidLaunchMessagesRequest) returns (stream HyperliquidLaunchMessagesResponse) {}
  rpc LatestHyperliquidLaunchFills (LatestHyperliquidLaunchFillsRequest) returns (stream HyperliquidLaunchFillsResponse) {}
  rpc HyperliquidLaunchHolders (HyperliquidLaunchHoldersRequest) returns (HyperliquidLaunchHoldersResponse) {}

  // HpumpV1
  rpc HpumpV1Launch(HpumpV1LaunchRequest) returns (HpumpV1LaunchResponse) {}
  rpc HpumpV1Launches(HpumpV1LaunchesRequest) returns (HpumpV1LaunchesResponse) {}
  rpc HpumpV1LaunchStream(HpumpV1LaunchStreamRequest) returns (stream HpumpV1LaunchStreamResponse) {}
  rpc HpumpV1LaunchSwap(HpumpV1LaunchSwapRequest) returns (HpumpV1LaunchSwapResponse) {}
  rpc HpumpV1LaunchSwaps(HpumpV1LaunchSwapsRequest) returns (HpumpV1LaunchSwapsResponse) {}
  rpc HpumpV1LaunchSwapStream(HpumpV1LaunchSwapStreamRequest) returns (stream HpumpV1LaunchSwapStreamResponse) {}
  rpc HpumpV1LaunchCandleStream(HpumpV1LaunchCandlesRequest) returns (stream HpumpV1LaunchCandlesResponse) {}
  rpc HpumpV1LaunchMessageStream(HpumpV1LaunchMessagesRequest) returns (stream HpumpV1LaunchMessagesResponse) {}

  rpc HypurrFunCabals (HypurrFunCabalsRequest) returns (HypurrFunCabalsResponse) {}

  rpc HypurrFunCabalPerformance (HypurrFunCabalPerformanceRequest) returns (HypurrFunCabalPerformanceResponse) {}

  rpc SetHyperliquidWalletDeploySessionTarget (SetHyperliquidWalletDeploySessionTargetRequest) returns (SetHyperliquidWalletDeploySessionTargetResponse) {}
  rpc DeleteHyperliquidWalletDeploySessionTarget (DeleteHyperliquidWalletDeploySessionTargetRequest) returns (DeleteHyperliquidWalletDeploySessionTargetResponse) {}
}
